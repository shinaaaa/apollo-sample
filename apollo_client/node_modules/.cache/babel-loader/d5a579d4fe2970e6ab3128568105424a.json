{"ast":null,"code":"var _jsxFileName = \"/Users/shinkim/Desktop/apollo-sample/apollo_client/src/routes/Detail.js\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nconst Container = styled.div`\n  height: 100vh;\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  color: white;\n`;\nconst Column = styled.div`\n  margin-left: 10px;\n`;\nconst Title = styled.h1`\n  font-size: 65px;\n  margin-bottom: 15px;\n`;\nconst Subtitle = styled.h4`\n  font-size: 35px;\n  margin-bottom: 10px;\n`;\nconst Description = styled.p`\n  font-size: 28px;\n`;\nconst Poster = styled.div`\n  background-image: url(${props => props.bg});\n  width: 25%;\n  height: 60%;\n  background-color: transparent;\n  background-size: cover; \n  background-position: center center;\n`;\nconst GET_MOVIE = gql`\n  query getMovie($id: Int!) {\n    movie(id: $id) {\n      title\n      medium_cover_image\n      language\n      rating\n      description_intro\n    }\n  }\n`;\nexport default (() => {\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    data\n  } = useQuery(GET_MOVIE, {\n    variables: {\n      id: parseInt(id)\n    }\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, loading ? \"Loading...\" : data.movie.title), !loading && data.movie && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Subtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, data.movie.language, \" \\u2022 \", data.movie.rating), /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, data.movie.description_intro))), /*#__PURE__*/React.createElement(Poster, {\n    bg: data && data.movie ? data.movie.medium_cover_image : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/shinkim/Desktop/apollo-sample/apollo_client/src/routes/Detail.js"],"names":["React","useParams","gql","useQuery","styled","Container","div","Column","Title","h1","Subtitle","h4","Description","p","Poster","props","bg","GET_MOVIE","id","loading","data","variables","parseInt","movie","title","language","rating","description_intro","medium_cover_image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;;;;;;;;CAA7B;AAUA,MAAMC,MAAM,GAAGH,MAAM,CAACE,GAAI;;CAA1B;AAIA,MAAME,KAAK,GAAGJ,MAAM,CAACK,EAAG;;;CAAxB;AAKA,MAAMC,QAAQ,GAAGN,MAAM,CAACO,EAAG;;;CAA3B;AAKA,MAAMC,WAAW,GAAGR,MAAM,CAACS,CAAE;;CAA7B;AAIA,MAAMC,MAAM,GAAGV,MAAM,CAACE,GAAI;0BACCS,KAAD,IAAWA,KAAK,CAACC,EAAG;;;;;;CAD9C;AASA,MAAMC,SAAS,GAAGf,GAAI;;;;;;;;;;CAAtB;AAYA,gBAAe,MAAM;AACnB,QAAM;AAAEgB,IAAAA;AAAF,MAASjB,SAAS,EAAxB;AACA,QAAM;AAAEkB,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBjB,QAAQ,CAACc,SAAD,EAAY;AAC5CI,IAAAA,SAAS,EAAE;AAAEH,MAAAA,EAAE,EAAEI,QAAQ,CAACJ,EAAD;AAAd;AADiC,GAAZ,CAAlC;AAGA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,OAAO,GAAG,YAAH,GAAkBC,IAAI,CAACG,KAAL,CAAWC,KAA5C,CADF,EAEG,CAACL,OAAD,IAAYC,IAAI,CAACG,KAAjB,iBACC,uDACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACG,KAAL,CAAWE,QADd,cAC2BL,IAAI,CAACG,KAAL,CAAWG,MADtC,CADF,eAIE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcN,IAAI,CAACG,KAAL,CAAWI,iBAAzB,CAJF,CAHJ,CADF,eAYE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAEP,IAAI,IAAIA,IAAI,CAACG,KAAb,GAAqBH,IAAI,CAACG,KAAL,CAAWK,kBAAhC,GAAqD,EAD3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAkBD,CAvBD","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  color: white;\n`;\n\nconst Column = styled.div`\n  margin-left: 10px;\n`;\n\nconst Title = styled.h1`\n  font-size: 65px;\n  margin-bottom: 15px;\n`;\n\nconst Subtitle = styled.h4`\n  font-size: 35px;\n  margin-bottom: 10px;\n`;\n\nconst Description = styled.p`\n  font-size: 28px;\n`;\n\nconst Poster = styled.div`\n  background-image: url(${(props) => props.bg});\n  width: 25%;\n  height: 60%;\n  background-color: transparent;\n  background-size: cover; \n  background-position: center center;\n`;\n\nconst GET_MOVIE = gql`\n  query getMovie($id: Int!) {\n    movie(id: $id) {\n      title\n      medium_cover_image\n      language\n      rating\n      description_intro\n    }\n  }\n`;\n\nexport default () => {\n  const { id } = useParams();\n  const { loading, data } = useQuery(GET_MOVIE, {\n    variables: { id: parseInt(id) },\n  });\n  return (\n    <Container>\n      <Column>\n        <Title>{loading ? \"Loading...\" : data.movie.title}</Title>\n        {!loading && data.movie && (\n          <>\n            <Subtitle>\n              {data.movie.language} â€¢ {data.movie.rating}\n            </Subtitle>\n            <Description>{data.movie.description_intro}</Description>\n          </>\n        )}\n      </Column>\n      <Poster\n        bg={data && data.movie ? data.movie.medium_cover_image : \"\"}\n      ></Poster>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}