{"ast":null,"code":"var _jsxFileName = \"/Users/shinkim/Desktop/apollo-sample/apollo_client/src/routes/Detail.js\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nconst GET_MOVIE = gql`\n  query getMovie($id: Int!) {\n    movie(id: $id) {\n      title\n      medium_cover_image\n      language\n      rating\n      description_intro\n    }\n    suggestions(id: $id) {\n      id\n      medium_cover_image\n    }\n  }\n`;\nconst Container = styled.div`\n  height: 100vh;\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  color: white;\n`;\nconst Column = styled.div`\n  margin-left: 10px;\n  width: 50%;\n`;\nconst Title = styled.h1`\n  font-size: 65px;\n  margin-bottom: 15px;\n`;\nconst Subtitle = styled.h4`\n  font-size: 35px;\n  margin-bottom: 10px;\n`;\nconst Description = styled.p`\n  font-size: 28px;\n`;\nconst Poster = styled.div`\n  width: 25%;\n  height: 60%;\n  background-color: transparent;\n  background-image: url(${props => props.bg});\n  background-size: cover;\n  background-position: center center;\n`;\nexport default (() => {\n  var _data$movie, _data$movie2, _data$movie3, _data$movie4;\n\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    data\n  } = useQuery(GET_MOVIE, {\n    variables: {\n      id\n    }\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, loading ? \"Loading...\" : data.movie.title), !loading && data.movie && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Subtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, data.movie.language, \" \\xB7 \", data.movie.rating), /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, data.movie.description_intro)), /*#__PURE__*/React.createElement(Subtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$movie = data.movie) === null || _data$movie === void 0 ? void 0 : _data$movie.language, \" \\xB7 \", data === null || data === void 0 ? void 0 : (_data$movie2 = data.movie) === null || _data$movie2 === void 0 ? void 0 : _data$movie2.rating), /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$movie3 = data.movie) === null || _data$movie3 === void 0 ? void 0 : _data$movie3.description_intro)), /*#__PURE__*/React.createElement(Poster, {\n    bg: data && data.movie ? data.movie.medium_cover_image : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Poster, {\n    bg: data === null || data === void 0 ? void 0 : (_data$movie4 = data.movie) === null || _data$movie4 === void 0 ? void 0 : _data$movie4.medium_cover_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/shinkim/Desktop/apollo-sample/apollo_client/src/routes/Detail.js"],"names":["React","useParams","gql","useQuery","styled","GET_MOVIE","Container","div","Column","Title","h1","Subtitle","h4","Description","p","Poster","props","bg","id","loading","data","variables","movie","title","language","rating","description_intro","medium_cover_image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,MAAMC,SAAS,GAAGH,GAAI;;;;;;;;;;;;;;CAAtB;AAgBA,MAAMI,SAAS,GAAGF,MAAM,CAACG,GAAI;;;;;;;;CAA7B;AAUA,MAAMC,MAAM,GAAGJ,MAAM,CAACG,GAAI;;;CAA1B;AAKA,MAAME,KAAK,GAAGL,MAAM,CAACM,EAAG;;;CAAxB;AAKA,MAAMC,QAAQ,GAAGP,MAAM,CAACQ,EAAG;;;CAA3B;AAKA,MAAMC,WAAW,GAAGT,MAAM,CAACU,CAAE;;CAA7B;AAIA,MAAMC,MAAM,GAAGX,MAAM,CAACG,GAAI;;;;0BAICS,KAAD,IAAWA,KAAK,CAACC,EAAG;;;CAJ9C;AASA,gBAAe,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAASjB,SAAS,EAAxB;AACA,QAAM;AAAEkB,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBjB,QAAQ,CAACE,SAAD,EAAY;AAC5CgB,IAAAA,SAAS,EAAE;AAAEH,MAAAA;AAAF;AADiC,GAAZ,CAAlC;AAGA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,OAAO,GAAG,YAAH,GAAkBC,IAAI,CAACE,KAAL,CAAWC,KAA5C,CADF,EAEG,CAACJ,OAAD,IAAYC,IAAI,CAACE,KAAjB,iBACC,uDACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACE,KAAL,CAAWE,QADd,YAC2BJ,IAAI,CAACE,KAAL,CAAWG,MADtC,CADF,eAIE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcL,IAAI,CAACE,KAAL,CAAWI,iBAAzB,CAJF,CAHJ,eAUE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IADH,aACGA,IADH,sCACGA,IAAI,CAAEE,KADT,gDACG,YAAaE,QADhB,YAC6BJ,IAD7B,aAC6BA,IAD7B,uCAC6BA,IAAI,CAAEE,KADnC,iDAC6B,aAAaG,MAD1C,CAVF,eAaE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcL,IAAd,aAAcA,IAAd,uCAAcA,IAAI,CAAEE,KAApB,iDAAc,aAAaI,iBAA3B,CAbF,CADF,eAgBE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAEN,IAAI,IAAIA,IAAI,CAACE,KAAb,GAAqBF,IAAI,CAACE,KAAL,CAAWK,kBAAhC,GAAqD,EAD3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAmBE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAEP,IAAF,aAAEA,IAAF,uCAAEA,IAAI,CAAEE,KAAR,iDAAE,aAAaK,kBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AAuBD,CA5BD","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nconst GET_MOVIE = gql`\n  query getMovie($id: Int!) {\n    movie(id: $id) {\n      title\n      medium_cover_image\n      language\n      rating\n      description_intro\n    }\n    suggestions(id: $id) {\n      id\n      medium_cover_image\n    }\n  }\n`;\n\nconst Container = styled.div`\n  height: 100vh;\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  color: white;\n`;\n\nconst Column = styled.div`\n  margin-left: 10px;\n  width: 50%;\n`;\n\nconst Title = styled.h1`\n  font-size: 65px;\n  margin-bottom: 15px;\n`;\n\nconst Subtitle = styled.h4`\n  font-size: 35px;\n  margin-bottom: 10px;\n`;\n\nconst Description = styled.p`\n  font-size: 28px;\n`;\n\nconst Poster = styled.div`\n  width: 25%;\n  height: 60%;\n  background-color: transparent;\n  background-image: url(${(props) => props.bg});\n  background-size: cover;\n  background-position: center center;\n`;\n\nexport default () => {\n  const { id } = useParams();\n  const { loading, data } = useQuery(GET_MOVIE, {\n    variables: { id },\n  });\n  return (\n    <Container>\n      <Column>\n        <Title>{loading ? \"Loading...\" : data.movie.title}</Title>\n        {!loading && data.movie && (\n          <>\n            <Subtitle>\n              {data.movie.language} · {data.movie.rating}\n            </Subtitle>\n            <Description>{data.movie.description_intro}</Description>\n          </>\n        )}\n        <Subtitle>\n          {data?.movie?.language} · {data?.movie?.rating}\n        </Subtitle>\n        <Description>{data?.movie?.description_intro}</Description>\n      </Column>\n      <Poster\n        bg={data && data.movie ? data.movie.medium_cover_image : \"\"}\n      ></Poster>\n      <Poster bg={data?.movie?.medium_cover_image}></Poster>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}