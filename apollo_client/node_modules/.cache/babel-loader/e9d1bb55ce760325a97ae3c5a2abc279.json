{"ast":null,"code":"var _jsxFileName = \"/Users/shinkim/Desktop/apollo-sample/apollo_client/src/components/Movie.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nconst LIKE_MOVIE = gql`\n  mutation toggleLikeMovie($id: Int!, $isLiked: Boolean!) {\n    toggleLikeMovie(id: $id, isLiked: $isLiked) @client\n  }\n`;\nconst Container = styled.div`\n  height: 400px;\n  border-radius: 7px;\n  width: 100%;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  background-color: transparent;\n`;\nconst Poster = styled.div`\n  background-image: url(${props => props.bg});\n  height: 100%;\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  border-radius: 7px;\n`;\nexport default (({\n  id,\n  bg,\n  isLiked\n}) => {\n  const [toggleMovie] = useMutation(LIKE_MOVIE, {\n    variables: {\n      id: parseInt(id),\n      isLiked\n    }\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Poster, {\n    bg: bg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, isLiked ? \"Unlike\" : \"Like\"));\n});","map":{"version":3,"sources":["/Users/shinkim/Desktop/apollo-sample/apollo_client/src/components/Movie.js"],"names":["React","Link","styled","gql","useMutation","LIKE_MOVIE","Container","div","Poster","props","bg","id","isLiked","toggleMovie","variables","parseInt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,UAAU,GAAGF,GAAI;;;;CAAvB;AAMA,MAAMG,SAAS,GAAGJ,MAAM,CAACK,GAAI;;;;;;CAA7B;AAQA,MAAMC,MAAM,GAAGN,MAAM,CAACK,GAAI;0BACAE,KAAK,IAAIA,KAAK,CAACC,EAAG;;;;;;CAD5C;AASA,gBAAe,CAAC;AAAEC,EAAAA,EAAF;AAAMD,EAAAA,EAAN;AAAUE,EAAAA;AAAV,CAAD,KAAyB;AACtC,QAAM,CAACC,WAAD,IAAgBT,WAAW,CAACC,UAAD,EAAa;AAC5CS,IAAAA,SAAS,EAAE;AAAEH,MAAAA,EAAE,EAAEI,QAAQ,CAACJ,EAAD,CAAd;AAAoBC,MAAAA;AAApB;AADiC,GAAb,CAAjC;AAGA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,IAAGD,EAAG,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAED,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAQ,IAAA,OAAO,EAAEG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BD,OAAO,GAAG,QAAH,GAAc,MAApD,CAJF,CADF;AAQD,CAZD","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\n\nconst LIKE_MOVIE = gql`\n  mutation toggleLikeMovie($id: Int!, $isLiked: Boolean!) {\n    toggleLikeMovie(id: $id, isLiked: $isLiked) @client\n  }\n`;\n\nconst Container = styled.div`\n  height: 400px;\n  border-radius: 7px;\n  width: 100%;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  background-color: transparent;\n`;\n\nconst Poster = styled.div`\n  background-image: url(${props => props.bg});\n  height: 100%;\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  border-radius: 7px;\n`;\n\nexport default ({ id, bg, isLiked }) => {\n  const [toggleMovie] = useMutation(LIKE_MOVIE, {\n    variables: { id: parseInt(id), isLiked }\n  });\n  return (\n    <Container>\n      <Link to={`/${id}`}>\n        <Poster bg={bg} />\n      </Link>\n      <button onClick={toggleMovie}>{isLiked ? \"Unlike\" : \"Like\"}</button>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}